version: '3.9'

x-common-env: &fider-env
  GO_ENV: ${env_string}
  # Public Host Name
  BASE_URL: ${base_url}

  # Connection string to the PostgreSQL database
  DATABASE_URL: ${database_url}

  # JWT Secret
  JWT_SECRET: ${jwt_secret}

  # From which account e-mails will be sent
  EMAIL_NOREPLY: noreply@yourdomain.com

  ###
  # EMAIL
  # Either EMAIL_MAILGUN_* or EMAIL_SMTP_* or EMAIL_AWSSES_* is required
  ###

  EMAIL_SMTP_HOST: ${mailhog_host}
  EMAIL_SMTP_PORT: ${mailhog_smtp_port}
  
  LOG_LEVEL: ${fider_log_level}
  DISABLE_EMAIL_NOTIFICATIONS: true
  LOG_CONSOLE: true
  LOG_SQL: ${fider_sql_log_level}
  LOG_FILE: false
  LOG_FILE_OUTPUT: logs/output.log  

  DATABASE_MAX_IDLE_CONNS: ${FIDER_IDLE_CONNS}
  DATABASE_MAX_OPEN_CONNS: ${FIDER_OPEN_CONNS}

  GOOGLE_ANALYTICS: ${GOOGLE_ANALYTICS}
  GOOGLE_ADSENSE: ${GOOGLE_ADSENSE}

  METRICS_ENABLED: ${METRICS_ENABLED}
  METRICS_PORT: 4000

x-common-build-args: &common-build-args
  DOCKER_USER_GID: ${DOCKER_USER_GID:-1000}
  DOCKER_USER_UID: ${DOCKER_USER_UID:-1000}

services:
  fider:
    build:
      context: ./
      dockerfile: Dockerfile
      args: *common-build-args
    image: ${IMAGE_REGISTRY:-ghcr.io}/${github_repo}:${image_tag:-latest}
    environment: *fider-env
    ports:
      - "${http_port}:3000" 
      - "${METRICS_PORT}:4000" 
    hostname: tarkov-community-${stack_env}
    restart: unless-stopped
    networks:
      - fider-network
    deploy:
      resources:
        limits:
          cpus: '${FIDER_CPU_LIMIT:-4}'
          memory: ${FIDER_MEMORY_LIMIT:-2G}
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "/app/fider", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      mailhog:
        condition: service_started
        restart: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    volumes:
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 64M

  mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: unless-stopped
    ports:
      - "${mailhog_web_port}:8025"
      - "${mailhog_smtp_port}:1025"
    networks:
      - fider-network
    deploy:
      resources:
        limits:
          cpus: '${MAILHOG_CPU_LIMIT:-0.3}'
          memory: ${MAILHOG_MEMORY_LIMIT:-256M}
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8025"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  postgres:
    image: postgres:16.2-alpine
    restart: unless-stopped
    command: >
      postgres
      -c max_connections=${PG_MAX_CONNS}
      -c shared_buffers=${PG_SHARED_BUFFERS}
      -c effective_cache_size=${PG_CACHE}
      -c work_mem=${PG_WORK_MEM}
      -c maintenance_work_mem=${PG_MAINTENANCE_WORK_MEM}
      -c checkpoint_completion_target=0.9
      -c wal_buffers=${PG_WAL_BUFF}
      -c max_wal_size=1GB
      -c min_wal_size=80MB
      -c log_statement=none
      -c ssl=on
      -c ssl_prefer_server_ciphers=on
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${postgres_dev_db_port}:5432"
    environment:
      POSTGRES_USER: ${postgres_user}
      POSTGRES_PASSWORD: ${postgres_password}
      POSTGRES_DB: ${postgres_db:-fider}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - fider-network
    deploy:
      resources:
        limits:
          cpus: '${POSTGRES_CPU_LIMIT:-4}'
          memory: ${POSTGRES_MEMORY_LIMIT:-4G}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${postgres_user} || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  pgadmin:
    image: dpage/pgadmin4:8.0
    restart: unless-stopped
    ports:
      - "${pgadmin_port}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${pgadmin_email}
      PGADMIN_DEFAULT_PASSWORD: ${pgadmin_password}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - fider-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  tunnel:
    image: cloudflare/cloudflared:2024.4.0
    restart: unless-stopped
    command: tunnel run
    environment:
      TUNNEL_TOKEN: ${cloudflared}
    networks:
      - fider-network
    deploy:
      resources:
        limits:
          cpus: '${TUNNEL_CPU_LIMIT:-0.3}'
          memory: ${TUNNEL_MEMORY_LIMIT:-256M}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

volumes:
  pgdata:
    name: tarkov-pgdata-${stack_env}
  pgadmin-data:
    name: tarkov-pgadmin-${stack_env}

networks:
  fider-network:
    name: tarkov-network-${stack_env}
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
